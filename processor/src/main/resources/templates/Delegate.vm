/*** GENERATED FROM ${info.inputFile} - DO NOT EDIT  ***/

/*
 * ${className}.java
 */
package ${info.packageName};

import com.rhythm.louie.Delegate;

public class ${className} implements ${info.serviceClassName}, Delegate<${info.serviceClassName}> {
    private ${info.serviceClassName} delegate;
    public ${className}() {}

    @Override
    public void setDelegate(${info.serviceClassName} delegate) {
        this.delegate = delegate;
    }

    @Override
    public ${info.serviceClassName} getDelegate() {
        return delegate;
    }
#foreach($method in $info.methodInfos)

#if ( $method.isDeprecated() )
    @Deprecated
#end
    @Override
    public ${method.returnType} ${method.name}(${method.paramString})${method.throwsClause} {
        return this.delegate.${method.name}(${method.paramNameString});
    }
#end
}