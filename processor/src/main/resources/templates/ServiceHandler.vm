/*** GENERATED FROM ${info.inputFile} - DO NOT EDIT  ***/

/*
 * ${className}.java
 *
 * Copyright (c) 2013 Rhythm & Hues Studios. All rights reserved.
 */
package ${info.packageName};

import com.rhythm.louie.Delegate;
import com.rhythm.louie.jms.MessageHandler;

import com.rhythm.pb.PBType;
import com.rhythm.pb.command.AnnotatedService;
import com.rhythm.pb.command.CacheLayer;

public class ${className} extends AnnotatedService implements ${baseName}Service, Delegate<${baseName}Client> {
    protected ${baseName}Client delegate;
    protected ${className}() {
        super("${info.serviceName}");
    }

    //protected ${baseName}Client getClient() {
    //    return delegate;
    //}

    @Override
    public void setDelegate(${baseName}Client delegate) {
        this.delegate=delegate;
    }
    
    @Override
    public ${baseName}Client getDelegate() {
        return delegate;
    }

    @Override
    public MessageHandler getMessageHandler() {
        if (delegate==null || !(delegate instanceof CacheLayer)) {
            return null;
        }
        return ((CacheLayer)delegate).getMessageHandler();
    }

    @Override
    public void initialize() throws Exception {
        super.initialize();
        if (delegate!=null && delegate instanceof CacheLayer) {
            ((CacheLayer)delegate).initialize();
        }
    }

    @Override
    public void shutdown() throws Exception {
        super.shutdown();
        if (delegate!=null && delegate instanceof CacheLayer) {
            ((CacheLayer)delegate).shutdown();
        }
    }
#foreach($method in $info.methodInfos)

#if ( $method.isDeprecated() )
    @Deprecated
#end
    @Override
    public ${method.returnType} ${method.name}(${method.paramString}) throws ${method.throwsClause} {
        ${method.convertedReturnType} pb = delegate.${method.name}(${method.convertParamString});
        return ${method.getReturnBuilderCode("pb")};
    }
#end
}