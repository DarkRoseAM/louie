 ------
 Protocol Buffers
 ------

Protocol Buffers

 {{{http://developers.google.com/protocol-buffers}Protocol Buffers}} (PBs) form the basis communication with LoUIE. In order to effectively utilize the capability in LoUIE, you will need to organize your data in PB Messages. Protocol Buffers are used heavily within Google and their documentation is stellar. If you are not familiar with PBs, it is well worth your time becoming comfortable with them and what you can and cannot do.

* Example

 In order explain how PBs are used throughout LoUIE, here is an example proto file found hypothetically in: service/src/main/resources/sample/sample.proto

+---------+
package sample;
 
option java_package = "com.somecompany.sample";
option java_outer_classname = "SampleProtos";
option java_generate_equals_and_hash = true;
 
message SamplePB {
    optional uint32             id                  = 1;
    optional string             data                = 2;
}
+---------+

 * The proto file must be in the same directory as the package name, ie package sample means this file lives in a sample directory inside of resources. The package is not only used for reference with other proto files but is used to determine the package for python and cpp autogenerated files.
  
 * Java specific custom options. We use these here to define how the java classes are created. This is needed to keep java naming conventions in line, since the pb package names are setup to match the preferred python conventions.
  
 * Defining of a message: Here we have a message defined with 2 fields. It is best to always use optional fields, and never "required" fields as this allows flexibility for future changes. 
  
 * It is encouraged that you add the PB suffix to all your message definitions. This is prevent naming conflicts from hand written classes. The point being that we would want to reserve Sample as the name of an object that added additional functionality.
    
 * When compiling a louie based service, the proto files are automatically compiled and the generated source is added to the build before compiling your classes.

Client Side

 PBs are in general somewhat limiting, as their fundamental purpose is data serialization and not a functional construct. LoUIE services tend to use PBs directly, and this is perfectly fine for most cases, however you will want to encapsulate a PB into your own object at some point to add functionality. It is encouraged that you adopt this pattern in your client side modules.