#  services.properties
#  A properties file to drive LoUIE service behavior

################################################################################
#### Defaults
#### the 'default' name represents default configurations for all services
#### all defaults besides jmsAdapter can be overriden at the per-service level 
################################################################################

#  All services specified in your ServletListener will be started. 
#  Else, each must be specifically enabled.
#  If not specified, default is: true
#default.enable = true

#  'main' is tied to the 'centralized' config and represents the specific central server (see server prop file)
#  If not specified, default is: ""
#default.main = BASE                                                

#  'centralized' is a flag denoting whether this service call should be routed to a central host
#  If not specified, default is: false
#default.centralized = false                                        

#  'readonly' disables methods which are tagged with the @Updating annotation in your service interface
#  If not specified, default is: false
#default.readonly = false                                           

#  'caching' can be used by the developer to enable or disable their cache layer
#  If not specified, default is: true
#default.caching = false                                            

#  'jmsAdapter' MUST be specified here if your application utilizes messaging
#  There is no internal default for this parameter
#default.jmsAdapter = com.rhythm.louie.activemq.ActiveMQAdapter                 

################################################################################
#### Per-service Override Examples
################################################################################

#  Override a service called 'employee' to specify an alternate central host 
#  and to enable caching
#employee.main = SECONDARY 
#employee.caching = true

#  Override a service called 'asset' to disable it
#asset.enable = false

################################################################################
#### Custom Configurations
#### It is also possible to create a custom config, 
#### which will be stored under the given name
################################################################################

#  create a new default property called 'random' which has a String value of 'true'
#default.random = true

#  create a new property called 'poll' for the employee service
#employee.poll = true
 


